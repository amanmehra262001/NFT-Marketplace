import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useMoralis, useMoralisQuery } from "react-moralis";
import { useEffect, useState } from "react";
import NFTBox from "./components/NFTBox";

const PAGE_SIZE = 9;

const Home: NextPage = () => {
  const [page, setPage] = useState(1);
  const { isWeb3Enabled } = useMoralis();

  const { data: listedNfts, isFetching: fetchingListedNfts } = useMoralisQuery(
    "ActiveItem",
    (query) =>
      query
        .limit(PAGE_SIZE)
        .descending("tokenId")
        .skip((page - 1) * PAGE_SIZE)
  );
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto">
        <h1 className="py-4 px-4 font-bold text-2xl">Recently Listed</h1>
        <div className="flex flex-wrap">
          {isWeb3Enabled ? (
            fetchingListedNfts ? (
              <div>Loading...</div>
            ) : (
              listedNfts.map((nft /*, index*/) => {
                console.log(nft.attributes);
                const {
                  price,
                  nftAddress,
                  tokenId,
                  marketplaceAddress,
                  seller,
                } = nft.attributes;

                return (
                  // <h5>
                  //   price={price} <br />
                  //   nftAddress={nftAddress} <br />
                  //   tokenId={tokenId} <br />
                  //   marketplaceAddress={marketplaceAddress} <br />
                  //   seller={seller} <br />
                  //   key={`${nftAddress}${tokenId}`} <br />
                  // </h5>
                  <NFTBox
                    price={price}
                    nftAddress={nftAddress}
                    tokenId={tokenId}
                    marketplaceAddress={marketplaceAddress}
                    seller={seller}
                    key={`${nftAddress}${tokenId}`}
                  />
                );
              })
            )
          ) : (
            <div>Web3 Currently Not Enabled </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Home;

// 0xE599c3DA2bF38f3278838eCce433386c386Bd019 -> NFT 721
// 0xD997CaCC2f52B2085f5133fD84A16A8e990eFe68 -> NFT 1155
// 0xdd7bbC68D3A7Ff96e9744E2472B7f3F57140AbaB -> NFT-MARKETPLACE
